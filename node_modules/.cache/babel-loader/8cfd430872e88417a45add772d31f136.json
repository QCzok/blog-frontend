{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/blog/Frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Message from \"./components/Message\"; //import Posts from \"./components/Posts\";\n//import Post from \"./components/Post\";\n//import PostForm from \"./components/PostForm\";\n\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport \"./App.css\"; // const axios = require(\"axios\").default;\n// const App = (props) => {\n//   const [posts, setPosts] = useState([]);\n//   const [message, setMessage] = useState(null);\n//   const setFlashMessage = (message) => {\n//     setMessage(message);\n//     setTimeout(() => {\n//       setMessage(null);\n//     }, 1600);\n//   };\n//   const getPosts = async () => {\n//     const postsdata = await axios.get(\"http://localhost:3001/posts\")\n//     console.log(postsdata.data);\n//     setPosts(postsdata.data);\n//   }\n//   useEffect(()=> getPosts(),[])\n//   const getNewSlugFromTitle = (title) =>\n//     encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));\n//   const addNewPost = (post) => {\n//     post.id = posts.length + 1;\n//     post.slug = getNewSlugFromTitle(post.title);\n//     if(post.title.length < 5) {\n//       alert (\"post not accepted, keep trying\")\n//     } else {\n//       setPosts([...posts, post]);\n//       setFlashMessage(`saved`);\n//     }\n//   };\n//   const updatePost = (post) => {\n//     post.slug = getNewSlugFromTitle(post.title);\n//     const index = posts.findIndex((p) => p.id === post.id);\n//     const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n//     const updatedPosts = [...oldPosts, post].sort((a, b) => a.id - b.id);\n//     setPosts(updatedPosts);\n//     setFlashMessage(`updated`);\n//   };\n//   return (\n//       <div className=\"App\">\n//         <Header />\n//         <Login />\n//         {message && <Message type={message} />}\n//         <Switch>\n//           {/* <Route exact path=\"/\" render={() => <Posts posts={posts} />} /> */}\n//           {/* <Route\n//             path=\"/post/:postSlug\"\n//             render={(props) => {\n//               const post = posts.find(\n//                 (post) => post.slug === props.match.params.postSlug\n//               );\n//               if (post) {\n//                 return <Post post={post} />;\n//               } else {\n//                 return <Redirect to=\"/\" />;\n//               }\n//             }}\n//           /> */}\n//           {/* <Route\n//             exact\n//             path=\"/new\"\n//             render={() => (\n//               <PostForm\n//                 addNewPost={addNewPost}\n//                 post={{ id: 0, slug: \"\", title: \"\", content: \"\" }}\n//               />\n//             )}\n//           /> */}\n//           <Route path=\"/login\" component={Login}/>\n//           {/* <Route\n//             path=\"/edit/:postSlug\"\n//             render={(props) => {\n//               const post = posts.find(\n//                 (post) => post.slug === props.match.params.postSlug\n//               );\n//               if (post) {\n//                 return <PostForm updatePost={updatePost} post={post} />;\n//               } else {\n//                 return <Redirect to=\"/\" />;\n//               }\n//             }}\n//           /> */}\n//           <Route component={NotFound} />\n//         </Switch>\n//       </div>\n//   );\n// };\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: NotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dci/Desktop/blog/Frontend/src/App.js"],"names":["React","useState","useEffect","Switch","Route","Redirect","Header","Message","NotFound","Login","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,QAHF,QAIO,kBAJP;AAKA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB,C,CACA;AACA;AACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,WAAP,C,CAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAgB;AACd,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAED,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADA;AAQD;;AAGD,eAAeE,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Message from \"./components/Message\";\n//import Posts from \"./components/Posts\";\n//import Post from \"./components/Post\";\n//import PostForm from \"./components/PostForm\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\n\nimport \"./App.css\";\n\n// const axios = require(\"axios\").default;\n\n// const App = (props) => {\n//   const [posts, setPosts] = useState([]);\n//   const [message, setMessage] = useState(null);\n\n//   const setFlashMessage = (message) => {\n//     setMessage(message);\n//     setTimeout(() => {\n//       setMessage(null);\n//     }, 1600);\n//   };\n\n//   const getPosts = async () => {\n//     const postsdata = await axios.get(\"http://localhost:3001/posts\")\n//     console.log(postsdata.data);\n\n//     setPosts(postsdata.data);\n//   }\n\n//   useEffect(()=> getPosts(),[])\n  \n\n//   const getNewSlugFromTitle = (title) =>\n//     encodeURIComponent(title.toLowerCase().split(\" \").join(\"-\"));\n\n//   const addNewPost = (post) => {\n//     post.id = posts.length + 1;\n//     post.slug = getNewSlugFromTitle(post.title);\n//     if(post.title.length < 5) {\n//       alert (\"post not accepted, keep trying\")\n//     } else {\n//       setPosts([...posts, post]);\n//       setFlashMessage(`saved`);\n//     }\n//   };\n\n//   const updatePost = (post) => {\n//     post.slug = getNewSlugFromTitle(post.title);\n//     const index = posts.findIndex((p) => p.id === post.id);\n//     const oldPosts = posts.slice(0, index).concat(posts.slice(index + 1));\n//     const updatedPosts = [...oldPosts, post].sort((a, b) => a.id - b.id);\n//     setPosts(updatedPosts);\n//     setFlashMessage(`updated`);\n//   };\n\n//   return (\n//       <div className=\"App\">\n//         <Header />\n\n//         <Login />\n        \n//         {message && <Message type={message} />}\n//         <Switch>\n//           {/* <Route exact path=\"/\" render={() => <Posts posts={posts} />} /> */}\n//           {/* <Route\n//             path=\"/post/:postSlug\"\n//             render={(props) => {\n//               const post = posts.find(\n//                 (post) => post.slug === props.match.params.postSlug\n//               );\n//               if (post) {\n//                 return <Post post={post} />;\n//               } else {\n//                 return <Redirect to=\"/\" />;\n//               }\n//             }}\n//           /> */}\n//           {/* <Route\n//             exact\n//             path=\"/new\"\n//             render={() => (\n//               <PostForm\n//                 addNewPost={addNewPost}\n//                 post={{ id: 0, slug: \"\", title: \"\", content: \"\" }}\n//               />\n//             )}\n//           /> */}\n\n//           <Route path=\"/login\" component={Login}/>\n\n          \n//           {/* <Route\n//             path=\"/edit/:postSlug\"\n//             render={(props) => {\n//               const post = posts.find(\n//                 (post) => post.slug === props.match.params.postSlug\n//               );\n//               if (post) {\n//                 return <PostForm updatePost={updatePost} post={post} />;\n//               } else {\n//                 return <Redirect to=\"/\" />;\n//               }\n//             }}\n//           /> */}\n//           <Route component={NotFound} />\n//         </Switch>\n//       </div>\n//   );\n// };\n\nfunction App () {\n  return (\n  <div>\n    <Switch>\n      <Route path=\"/login\" component={Login}/>\n      <Route component={NotFound} />\n    </Switch>\n  </div>)\n\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}